rule bam2tagAlign:
    input: "mapped_reads/{sample}.final.bam"
    output:
        temp_tagAlign = temp("mapped_reads/{sample}.PE2SE.tagAlign"),
        tagAlign = "mapped_reads/{sample}.PE2SE.tagAlign.gz"
    threads: 4
    conda: "./chipseq.yaml"
    shell:
        """
		    bamToBed -i {input} | awk 'BEGIN{{OFS="\\t"}}{{$4="N";$5="1000";print $0}}' |\
		    tee {output.temp_tagAlign} |\
		    gzip -c > {output.tagAlign}
		    """

rule subsample_tagAlign:
    input: "mapped_reads/{sample}.PE2SE.tagAlign"
    output: "mapped_reads/{sample}.sample.PE2SE.tagAlign"
    threads: 1
    shell:
		    """
		    grep -v 'chrM' {input} |\
		    shuf -n 15000000  |awk 'BEGIN{{OFS="\\t"}}{{$4="N";$5="1000";print $0}}'  > {output}
        """

rule spp:
    input: "mapped_reads/{sample}.sample.PE2SE.tagAlign"
    output: 
        temp_cc_scores = temp("xcor/{sample}.cc_scores.tmp"),
        cc_scores = "xcor/{sample}.cc_scores",
        cc_plot = "xcor/{sample}.cc_plot.pdf"
    threads: 4
    shell:
		    """
		    Rscript run_spp_nodups.R -c={input} -p={threads} -filtchr=chrM -savp={output.cc_plot} -out={output.cc_scores} > /dev/null 2>&1
 	      sed -r  's/,[^\\t]+//g' {output.cc_scores} > {output.temp_cc_scores} 
		    cp {output.temp_cc_scores} {output.cc_scores}		
		    """
      